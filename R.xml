<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Lab Notebook - R</title>
 <link href="/2012/R.xml" rel="self"/>
 <link href="/"/>
 <updated>2015-02-25T21:45:20+00:00</updated>
 <id>http://www.carlboettiger.info</id>
 <author>
   <name>Carl Boettiger</name>
   <email>cboettig@gmail.com</email>
 </author>

 
 <entry>
   <title>knitcitations</title>
	 <link href="/2012/05/30/knitcitations.html"/>
   <updated>2012-05-30T00:00:00+00:00</updated>
   <id>/05/30/knitcitations</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;: Note that this package has evolved quite a bit from this initial post. While the basic interface is the same, support for additional features and some choices in formatting differ from what is presented here. Please see the &lt;a href=&quot;https://github.com/cboettig/knitcitations/&quot;&gt;README&lt;/a&gt; for the latest introduction to the package. Readers may also be interested in the more recent post discussing the &lt;a href=&quot;http://www.carlboettiger.info/2013/02/22/semantic-citations-for-the-notebook-and-knitr.html&quot;&gt;introduction of several new features including semantic tools in the &lt;code&gt;knitcitations&lt;/code&gt; package&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Markdown is becoming an increasingly popular platform for lightweight and online publishing. While traditional publishing tools like LaTeX and word processors have long had integrated bibliographic management, few tools handle citations for lightweight publishing. I am finding myself more and more drawn to markdown rather then tex/Rnw as my standard format (not least of which is the ease of displaying the files on github, particularly now that we have automatic image uploading. I’ve taken a little whack at generating in-text citations using knitr and other R tools.&lt;/p&gt;
&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;
&lt;p&gt;I’ve put some simple functions in a &lt;code&gt;knitcitations&lt;/code&gt; package (see the most recent version of the &lt;a href=&quot;http://github.com/cboettig/knitcitations&quot;&gt;knitcitations package on github here&lt;/a&gt;). The functions use the crossref API to grab citation information given a doi, so I don’t have to generate a bibtex file for papers I’m reading, (inspired by the &lt;a href=&quot;http://wordpress.org/extend/plugins/kcite/&quot;&gt;kcite&lt;/a&gt; package for Wordpress). One can currently grab the package from Github&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(devtools)
&lt;span class=&quot;kw&quot;&gt;install_github&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;knitcitations&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;cboettig&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s load the package into R and go for a spin.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;require&lt;/span&gt;(knitcitations)&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;generating-citations&quot;&gt;Generating citations&lt;/h2&gt;
&lt;h3 id=&quot;doi-approach&quot;&gt;DOI Approach&lt;/h3&gt;
&lt;p&gt;Then we can generate a citation given a DOI with the &lt;code&gt;ref&lt;/code&gt; function:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;r &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ref&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;10.1111/j.1461-0248.2005.00827.x&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(r, &lt;span class=&quot;st&quot;&gt;&amp;quot;html&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Halpern BS, Regan HM, Possingham HP and Mccarthy MA (2006). “Accounting For Uncertainty in Marine Reserve Design.” &lt;em&gt;Ecology Letters&lt;/em&gt;, 9. ISSN 1461-023X, &lt;a href=&quot;http://dx.doi.org/10.1111/j.1461-0248.2005.00827.x&quot; class=&quot;uri&quot;&gt;http://dx.doi.org/10.1111/j.1461-0248.2005.00827.x&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that R allows bibitems to print in a variety of formats, including html.&lt;/p&gt;
&lt;p&gt;We can generate inline citations in the short name/date format with the &lt;code&gt;citet&lt;/code&gt; function:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;citet&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;10.1111/j.1461-0248.2005.00827.x&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[1] “Halpern &lt;em&gt;et. al.&lt;/em&gt; (2006)”&lt;/p&gt;
&lt;p&gt;Similarly we can generate parenthetical citations with the &lt;code&gt;citep&lt;/code&gt; function,&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;citep&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;10.1111/j.1461-0248.2005.00827.x&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;10.1890/11-0011.1&amp;quot;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[1] “(Halpern &lt;em&gt;et. al.&lt;/em&gt; 2006; Abrams &lt;em&gt;et. al.&lt;/em&gt; 2012)”&lt;/p&gt;
&lt;p&gt;Which can take a list of DOIs to cite parenthetically. The &lt;code&gt;citet&lt;/code&gt; and &lt;code&gt;citep&lt;/code&gt; functions are automatically retrieving the available metadata via the Crossref API, and R is storing the information to generate the final bibliography.&lt;/p&gt;
&lt;h3 id=&quot;using-and-creating-citation-keys&quot;&gt;Using and creating citation keys&lt;/h3&gt;
&lt;p&gt;When specifying a DOI for a citation, we can also give the citation a simple key name so we can use it later without having to remember the DOI, for instance, we can make the first citation of a particular example as&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;citep&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;Michaels =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;10.1111/j.1755-263X.2012.00241.x&amp;quot;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[1] “(Michaels &amp;amp; Tyre, 2012)”&lt;/p&gt;
&lt;p&gt;and then later use&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;citep&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Michaels&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[1] “(Michaels &amp;amp; Tyre, 2012)”&lt;/p&gt;
&lt;p&gt;If we do not pass a key for the DOI we create, knitcitations will automatically generate a key of it’s own using the last name of the first author and the year. For instance, based on one of the DOI-citations we have already created, we can do&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;citet&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Halpern2006&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[1] “Halpern &lt;em&gt;et. al.&lt;/em&gt; (2006)”&lt;/p&gt;
&lt;p&gt;and knitcitations recognizes the key. The function will try to avoid collisions in the key: if it is given or creates a key matching one that is already in use, it will see if the titles of the articles match. If the are the same, the same key is used to avoid a duplicate entry. This makes it safe to call&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;citet&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;Halpern2006 =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;10.1111/j.1461-0248.2005.00827.x&amp;quot;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[1] “Halpern &lt;em&gt;et. al.&lt;/em&gt; (2006)”&lt;/p&gt;
&lt;p&gt;even if we have earlier or later cited by the doi alone. Collision checking also avoids duplicating keys that correspond to different papers. If the titles are unique, knitcitations appends an underscore at the end of the automatically generated key. For instance, here we call a DOI that corresponds to a different citation with the same first author and year:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;citet&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;10.1111/j.1523-1739.2005.00258.x&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Warning message: Automatic key generation found a copy of this key, using Halpern2006_ instead&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[1] “Halpern &lt;em&gt;et. al.&lt;/em&gt; (2006)”&lt;/p&gt;
&lt;p&gt;A warning (not printed by knitr when this is used inline, but included in the log file) alerts us to the fact that this citation has been given an alternate key,&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;citet&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Halpern2006_&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[1] “Halpern &lt;em&gt;et. al.&lt;/em&gt; (2006)”&lt;/p&gt;
&lt;p&gt;Of course if managing different keys sounds annoying, we can just call the DOI directly each time.&lt;/p&gt;
&lt;h3 id=&quot;bibtex-approach&quot;&gt;Bibtex Approach&lt;/h3&gt;
&lt;p&gt;If we have a bibtex file, we can use this for the citations as well. If you don’t have a bibtex file handy, you can make one containing the citation information for some of R’s packages:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;write.bibtex&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;bibtex&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;knitr&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;knitcitations&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;file =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;example.bib&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We could also have used the &lt;code&gt;ref&lt;/code&gt; function write a bibtex file for our list of DOIs&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;refs &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;lapply&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;10.1111/j.1461-0248.2005.00827.x&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;10.1890/11-0011.1&amp;quot;&lt;/span&gt;), 
    ref)
&lt;span class=&quot;kw&quot;&gt;write.bibtex&lt;/span&gt;(refs, &lt;span class=&quot;dt&quot;&gt;file =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;refs.bib&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once we have a bibtex file available, we must read it into R.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;bib &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;read.bibtex&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;example.bib&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can now create citations from &lt;code&gt;bib&lt;/code&gt; using the bibtex key,&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;bib[[&lt;span class=&quot;st&quot;&gt;&amp;quot;knitr&amp;quot;&lt;/span&gt;]]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Xie Y (2012). &lt;em&gt;knitr: A general-purpose package for dynamic report generation in R&lt;/em&gt;. R package version 0.5.4, &lt;URL:
http://yihui.name/knitr/&gt;.&lt;/p&gt;
&lt;p&gt;The inline citation tools can also now use this &lt;code&gt;bib&lt;/code&gt; instead of a DOI to generate a citation,&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;citet&lt;/span&gt;(bib[[&lt;span class=&quot;st&quot;&gt;&amp;quot;knitr&amp;quot;&lt;/span&gt;]])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[1] “Xie, (2012)”&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;citep&lt;/span&gt;(bib[&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;knitr&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;bibtex&amp;quot;&lt;/span&gt;)])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[1] “(Xie, 2012; Francois, 2011)”&lt;/p&gt;
&lt;p&gt;Like the case of the DOI, after we have used a citation once, we can cite by the bibkey name directly, rather than having to reference the bibentry object (&lt;em&gt;e.g.&lt;/em&gt; from the &lt;code&gt;bib&lt;/code&gt; list):&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;citet&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;knitr&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[1] “Xie, (2012)”&lt;/p&gt;
&lt;h3 id=&quot;using-the-inline-citations&quot;&gt;Using the inline citations&lt;/h3&gt;
&lt;p&gt;The inline citation calls are designed to be used with knitr’s inline code blocks. In markdown, these are enclosed in ` r `. The output format will use the plain-text rendering rather than the code markup. Thus we can use the line &lt;code&gt;citep(&amp;quot;10.1111/j.1461-0248.2005.00827.x&amp;quot;)&lt;/code&gt; to generate a parenthetical citation, (Halpern &lt;em&gt;et. al.&lt;/em&gt; 2006). We can generate the in-text citations with &lt;code&gt;citet&lt;/code&gt;, such as Xie, (2012).&lt;/p&gt;
&lt;h2 id=&quot;generating-the-final-bibliography&quot;&gt;Generating the final bibliography&lt;/h2&gt;
&lt;p&gt;As we go along adding inline citations, R stores the list of citation info. Then at the end of the document, use this command to print the bibliography generated by the use of our inline citations.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;bibliography&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;html&amp;quot;&lt;/span&gt;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Halpern BS, Regan HM, Possingham HP and Mccarthy MA (2006). “Accounting For Uncertainty in Marine Reserve Design.” &lt;em&gt;Ecology Letters&lt;/em&gt;, &lt;strong&gt;9&lt;/strong&gt;. ISSN 1461-023X, &lt;a href=&quot;http://dx.doi.org/10.1111/j.1461-0248.2005.00827.x&quot; class=&quot;uri&quot;&gt;http://dx.doi.org/10.1111/j.1461-0248.2005.00827.x&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Abrams PA, Ruokolainen L, Shuter BJ and Mccann KS (2012). “Harvesting Creates Ecological Traps: Consequences of Invisible Mortality Risks in Predator-Prey Metacommunities.” &lt;em&gt;Ecology&lt;/em&gt;, &lt;strong&gt;93&lt;/strong&gt;. ISSN 0012-9658, &lt;a href=&quot;http://dx.doi.org/10.1890/11-0011.1&quot; class=&quot;uri&quot;&gt;http://dx.doi.org/10.1890/11-0011.1&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Michaels S and Tyre AJ (2012). “How Indeterminism Shapes Ecologists’ Contributions to Managing Socio-Ecological Systems.” &lt;em&gt;Conservation Letters&lt;/em&gt;. &lt;a href=&quot;http://dx.doi.org/10.1111/j.1755-263X.2012.00241.x&quot; class=&quot;uri&quot;&gt;http://dx.doi.org/10.1111/j.1755-263X.2012.00241.x&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Halpern BS, Pyke CR, Fox HE, Haney JC, Schlaepfer MA and Zaradic P (2006). “Gaps And Mismatches Between Global Conservation Priorities And Spending.” &lt;em&gt;Conservation Biology&lt;/em&gt;, &lt;strong&gt;20&lt;/strong&gt;. &lt;a href=&quot;http://dx.doi.org/10.1111/j.1523-1739.2005.00258.x&quot; class=&quot;uri&quot;&gt;http://dx.doi.org/10.1111/j.1523-1739.2005.00258.x&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Xie Y (2012). &lt;em&gt;knitr: A general-purpose package for dynamic report generation in R&lt;/em&gt;. R package version 0.5.4, &lt;a href=&quot;http://yihui.name/knitr/&quot; class=&quot;uri&quot;&gt;http://yihui.name/knitr/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Francois R (2011). &lt;em&gt;bibtex: bibtex parser&lt;/em&gt;. R package version 0.3-0, &lt;a href=&quot;http://CRAN.R-project.org/package=bibtex&quot; class=&quot;uri&quot;&gt;http://CRAN.R-project.org/package=bibtex&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;reflections&quot;&gt;Reflections&lt;/h2&gt;
&lt;p&gt;We could have justed printed bibliography in plain text format using with &lt;code&gt;bibliography()&lt;/code&gt;. Note that it contains only the citations created with the inline citation commands &lt;code&gt;citet&lt;/code&gt; and &lt;code&gt;citep&lt;/code&gt;, in the order cited. All of these citations are stored in a hidden options variable in R when the inline functions are called. To reset the citation list (&lt;em&gt;i.e.&lt;/em&gt; empty the contents of “bibliography()”) we can use the &lt;code&gt;cleanbib()&lt;/code&gt; command, or set the option &lt;code&gt;bibliography(erase=TRUE)&lt;/code&gt;. Typically we could hide the bibliography chunk using a inline knitr call or the chunk option “echo=FALSE”.&lt;/p&gt;
&lt;p&gt;I hope to add markup to format this a bit more nicely later. For instance, we want the links to appear as real links. Additionally, we may want to add markup around the citations, such as the reason for the citation into the link using the &lt;a href=&quot;http://speroni.web.cs.unibo.it/cgi-bin/lode/req.py?req=http:/purl.org/spar/cito&quot;&gt;Citation Typing Ontology&lt;/a&gt;. Ideally I need a method to support different citation styles, even though it is silly in today’s world that the citation format is still a choice of the &lt;em&gt;publisher&lt;/em&gt; and not a choice of the &lt;em&gt;reader&lt;/em&gt;. This will probably require citeproc integration and a major upgrade. Please report any bugs, feature requests or citations on the &lt;a href=&quot;https://github.com/cboettig/knitcitations/issues&quot;&gt;Github issues tracker!&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;comparing-lightweight-citation-alternatives&quot;&gt;Comparing lightweight citation alternatives&lt;/h3&gt;
&lt;p&gt;Several citation alternatives are available for lightweight publishing outside of this option, each with its own advantages and limitations. John MacFarlane’s &lt;a href=&quot;http://johnmacfarlane.net/pandoc/&quot;&gt;Pandoc&lt;/a&gt; is probably the most widely used citation manager for markdown files, working with a bibtex source file but formatting the citation lists using citeproc. It has the advantage of a more concise citation syntax, consistent with the source-readable goals of markdown and citation formating. Of course it is a markdown extension and will not be read by other markdown interpreters. This would be less of an issue of Pandoc could run markdown -&amp;gt; markdown without garbling syntax of some other markdown interpreter, like Github-flavored markdown.&lt;/p&gt;
&lt;p&gt;The only other tool I know of that provides dynamic citations by DOI look-up is Phil Lord’s excellent Wordpress plugin, &lt;a href=&quot;http://wordpress.org/extend/plugins/kcite/&quot;&gt;kcite&lt;/a&gt;. It now uses citeproc for formatting, automatically links the in-text citations to the bibliography, supports PubMed and ArXiv ids as well as DOIs and even web URLs (though not bibtex files). The major limitation for me is that it is limited to Wordpress with Wordpress specific shortcode. (Of course I introduce R-specific code here, but with the assumption of a knitr-based audience who probably uses github). A variety of other platform-specific plugins are available to convert bibtex files into citations for different blogging platforms, including Wordpress and Jekyll.&lt;/p&gt;
&lt;p&gt;So why knitcitations? My goal is primarily to bring this functionality to knitr users who rely on the markdown format rather than the latex format and are interested in dynamic citations and web-based publishing. I hope it finds its niche.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Writing reproducibly in the open with knitr</title>
	 <link href="/2012/04/07/writing-reproducibly-in-the-open-with-knitr.html"/>
   <updated>2012-04-07T14:58:36+00:00</updated>
   <id>/04/07/writing-reproducibly-in-the-open-with-knitr</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Sweave&quot;&gt;Sweave&lt;/a&gt; is something of a gold standard in reproducible research. It creates a &lt;em&gt;dynamic document&lt;/em&gt;, written in a mix of LaTeX and R code where the results of the analysis (numbers, figures, tables) are automatically generated from the code and inserted into the resulting pdf document, making them easy to update if the data or methods change. It’s a nice idea, in principle.&lt;/p&gt;
&lt;p&gt;However, the practical troubles are many. Coauthors don’t know LaTeX, publishers who don’t accept LaTeX or pdfs. The LaTeX myth that you are freed from thinking about formatting, when in fact you have to fill your document with LaTeX specific markup that makes it a burden both to type and to read the source-code. Compiling and debugging your text. And then the reproducibility comes from sharing that Sweave file – a mix of LaTeX and R that almost no one can read easily. Where’s the elegance in that? ((I’m glossing over the additional challenges of highlighting, caching, and formating on the R code side, which have been largely addressed by additional packages and are elegantly solved in knitr.)) Sure, none of these are show-stoppers – I’ve been content with LaTeX for years – but suddenly there’s a better way.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;http://yihui.name/knitr/&quot;&gt;knitr&lt;/a&gt;, a successor of Sweave, I can write my publications in &lt;a href=&quot;http://en.wikipedia.org/wiki/Markdown&quot;&gt;markdown&lt;/a&gt;. Unlike LaTeX, HTML, or other markup languages, markdown is designed to be easily read as plain text, but can also be interpreted into pretty HTML, and now into almost any other format thanks to &lt;a href=&quot;http://johnmacfarlane.net/pandoc/&quot;&gt;pandoc&lt;/a&gt;. All of which is to say that writing and sharing just got &lt;em&gt;a lot easier.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.carlboettiger.info/archives/4325&quot;&gt;As I have written previously&lt;/a&gt;, I already use this markdown format for my notes and code, so there’s no re-typing required. When working on the paper, I can just write. I can edit the code without flipping back and forth between files. Knitr can run the code blocks, caching parts that have already run for efficiency, and upload the resulting figures in &lt;code&gt;png&lt;/code&gt; format automatically to the Internet. Github displays the &lt;a href=&quot;https://github.com/ropensci/rfishbase/blob/master/inst/doc/rfishbase/rfishbase_github.md&quot;&gt;resulting document&lt;/a&gt; and the&lt;/p&gt;
&lt;pre class=&quot;file&quot;&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(https://github.com/ropensci/rfishbase/blob/master/inst/doc/rfishbase/source/rfishbase.md), while also &lt;a href=&quot;https://github.com/ropensci/rfishbase/commits/master/inst/doc/rfishbase/source&quot;&gt;tracking the versions&lt;/a&gt; as my writing progresses.&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;http://farm8.staticflickr.com/7241/7054829647_ac9dcc4bd3_z.jpg&quot; alt=&quot;Different output formats for the manuscript&quot; /&gt;&lt;figcaption&gt;Different output formats for the manuscript&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;Pandoc allows me to transform these notes into a LaTeX file that can generate professional-looking pdfs with given journal &lt;code&gt;.cls&lt;/code&gt; files by using &lt;a href=&quot;https://github.com/ropensci/rfishbase/blob/master/inst/doc/rfishbase/elsarticle.latex&quot;&gt;a custom latex template&lt;/a&gt;. Pandoc can also generate the less pretty but often required word documents. &lt;a href=&quot;https://github.com/ropensci/rfishbase/blob/master/inst/doc/rfishbase/knit&quot;&gt;A separate Rscript&lt;/a&gt; combines with a &lt;a href=&quot;https://github.com/ropensci/rfishbase/blob/master/inst/doc/rfishbase/Makefile&quot;&gt;Makefile&lt;/a&gt; to control the relevant formatting – for LaTeX output I want high-quality &lt;code&gt;pdf&lt;/code&gt; graphics, for Word-doc output I want &lt;code&gt;eps&lt;/code&gt; graphics which are created but not pasted into the Word file, for the drafts I want &lt;code&gt;png&lt;/code&gt; graphics stored online for easy sharing. Pandoc allows citations to be extracted from my Mendeley library (via Bibtex files) and inserted into each of these output formats (doc, pdf, github markdown).&lt;/p&gt;
&lt;p&gt;Getting the LaTeX template, Makefile, and knit script set up for this pipeline takes a little care – mostly to ensure figures and tables look appropriate in all outputs. Once these files are created though, they can be easily reused on other manuscripts. A simple &lt;code&gt;make pdf&lt;/code&gt; builds the pdf copy, &lt;code&gt;make docx&lt;/code&gt; builds a MS Word copy, ((though these binary files aren’t stored in the git repository)) and &lt;code&gt;make github&lt;/code&gt; the copy that displays with images on Github.&lt;/p&gt;
&lt;p&gt;The links in this post point to what is an active draft of a little manuscript at the time of this writing. In addition to making the final result reproducible, Github captures the &lt;a href=&quot;http://en.wikipedia.org/wiki/Provenance#Data_provenance&quot;&gt;provenance&lt;/a&gt; or history of the research and writing process. It’s not a perfect system, but it’s a nice step.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Citations in markdown using knitr</title>
	 <link href="/2012/03/24/citations-in-markdown-using-knitr.html"/>
   <updated>2012-03-24T21:33:27+00:00</updated>
   <id>/03/24/citations-in-markdown-using-knitr</id>
   <content type="html">&lt;p&gt;I am finding myself more and more drawn to markdown rather then tex/Rnw as my standard format (not least of which is the ease of displaying the files on github, particularly now that we have automatic image uploading). One thing I miss from latex is the citation commands. (I understand these can be provided to markdown via Pandoc, but I’d like to simply have to knit the document, and not then run it through pandoc, latex, or another interpreter). I’ve taken a little whack at generating in-text citations using knitr and other R tools.&lt;/p&gt;
&lt;h3 id=&quot;doi-approach&quot;&gt;DOI Approach&lt;/h3&gt;
&lt;p&gt;I’ve put some simple functions in a &lt;code&gt;knitcitations&lt;/code&gt; package. The functions use the crossref API to grab citation information given a doi, so I don’t have to generate a bibtex file for papers I’m reading, (inspired by the &lt;a href=&quot;http://wordpress.org/extend/plugins/kcite/&quot;&gt;kcite&lt;/a&gt; package for Wordpress). One can grab my package from github&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(devtools)
&lt;span class=&quot;kw&quot;&gt;install_github&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;knitcitations&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;cboettig&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and load the package&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;require&lt;/span&gt;(knitcitations)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then we can generate a citation given a doi with the &lt;code&gt;ref&lt;/code&gt; function:&lt;/p&gt;
&lt;h3 id=&quot;bibtex-approach&quot;&gt;Bibtex Approach&lt;/h3&gt;
&lt;p&gt;If we have a bibtex file, we can use this for the citations as well. Let’s start off by getting ourselves a bibtex file from some of R’s packages:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;library&lt;/span&gt;(bibtex)
&lt;span class=&quot;kw&quot;&gt;write.bib&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;c&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;#39;bibtex&amp;#39;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;knitr&amp;#39;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;#39;knitcitations&amp;#39;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;file=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;example.bib&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we can simply read in the bibtex files:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
biblio &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;read.bib&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;example.bib&amp;quot;&lt;/span&gt;)
biblio[[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;]]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Francois R (2011). &lt;em&gt;bibtex: bibtex parser&lt;/em&gt;. R package version 0.3-1/r332, .&lt;/p&gt;
&lt;p&gt;(This would be much more awesome if we could generate keys on write.bib and use those bibtex keys, instead of the index value, &lt;code&gt;[[1]]&lt;/code&gt;, to generate the citation.)&lt;/p&gt;
&lt;h3 id=&quot;using-the-inline-citations&quot;&gt;Using the inline citations&lt;/h3&gt;
&lt;p&gt;Now that we can get citation information from bibtex files or dois, we need a way to insert these citations into the text. I’ve written a simple &lt;code&gt;citep&lt;/code&gt; print inline citations that would just use a given shortened format (e.g. author-year) and add the citation to a &lt;code&gt;works_cited&lt;/code&gt; object, which we could then use to generate the full citation information at the end. We can generate inline citations by giving a doi, bibentry object, or a list thereof, into inline knitr code block. Thus we can use the line &lt;code&gt;citep(&amp;quot;10.1111/j.1461-0248.2005.00827.x&amp;quot;)&lt;/code&gt; to generate a parenthetical citation, (Halpern &lt;em&gt;et. al.&lt;/em&gt; 2006). We can alos generate textual citations with &lt;code&gt;citet(biblio[1])&lt;/code&gt;, such as Francois, (2011). Parenthetical citations can take more than one entry, such as &lt;code&gt;citep[biblio[2:3]&lt;/code&gt;, which produces (Xie, 2012; Boettiger, 2012).&lt;/p&gt;
&lt;h3 id=&quot;generating-the-final-bibliography&quot;&gt;Generating the final bibliography&lt;/h3&gt;
&lt;p&gt;As we go along adding inline citations, R stores the list of citation info. Then at the end of the document, use this command to print the bibliography generated by the use of our inline citations.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;bibliography&lt;/span&gt;()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Halpern B, Regan H, Possingham H and McCarthy M (2006). “Accounting for uncertainty in marine reserve design.” &lt;em&gt;Ecology Letters&lt;/em&gt;, &lt;em&gt;9&lt;/em&gt;. ISSN 1461-023X, .&lt;/p&gt;
&lt;p&gt;Francois R (2011). &lt;em&gt;bibtex: bibtex parser&lt;/em&gt;. R package version 0.3-1/r332, .&lt;/p&gt;
&lt;p&gt;Xie Y (2012). &lt;em&gt;knitr: A general-purpose package for dynamic report generation in R&lt;/em&gt;. R package version 0.4.1, .&lt;/p&gt;
&lt;p&gt;Boettiger C (2012). &lt;em&gt;knitcitations: Citations for knitr markdown files&lt;/em&gt;. R package version 0.0-1.&lt;/p&gt;
&lt;p&gt;I hope to add markup to format this a bit more nicely later. For instance, we want the links to appear as real links. Additionally, we may want to add markup around the citations, such as the reason for the citation into the link using the &lt;a href=&quot;http://speroni.web.cs.unibo.it/cgi-bin/lode/req.py?req=http:/purl.org/spar/cito&quot;&gt;Citation Typing Ontology&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This entry was, of course, produced in knitr with my &lt;a href=&quot;https://github.com/cboettig/knitcitations&quot;&gt;knitcitations&lt;/a&gt; package. See the &lt;a href=&quot;https://raw.github.com/cboettig/knitcitations/master/inst/examples/citations_knit_.md&quot;&gt;original source&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>knitr, github, and a new phase for the lab notebook</title>
	 <link href="/2012/03/21/knitr-github-and-a-new-phase-for-the-lab-notebook.html"/>
   <updated>2012-03-21T12:13:42+00:00</updated>
   <id>/03/21/knitr-github-and-a-new-phase-for-the-lab-notebook</id>
   <content type="html">&lt;p&gt;I have recently modified the basic workflow of my lab notebook since discovering &lt;a href=&quot;http://yihui.name/knitr/&quot;&gt;knitr&lt;/a&gt;. Before, I would write code files which I could track on &lt;a href=&quot;https://github.com&quot;&gt;github&lt;/a&gt;, push figures created by the code to flickr, and then write a notebook entry on wordpress describing what I was doing. I’d embed each figure I wanted into the entry, and each figure got an automatic link to github for the script that created it (which usually worked, though it didn’t say where in the script the command came from, and it required manually specifying the script name).&lt;/p&gt;
&lt;p&gt;Because knitr allows me to write a single file containing code and formatted text, and will automatically display the code and embed the images, I can avoid that more convoluted workflow and just write.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://farm8.staticflickr.com/7256/7003687571_09f79cfc15_o.png&quot; /&gt;](https://github.com/cboettig/pdg_control/blob/master/inst/examples)&lt;/p&gt;
&lt;p&gt;What makes this so excellent is that knitr allows me to write in markdown, and github automatically displays nicely formatted markdown instead of raw script when you visit the page. So whereas before I would keep a bunch of working &lt;a href=&quot;https://github.com/cboettig/pdg_control/tree/master/demo&quot;&gt;R scripts&lt;/a&gt; in &lt;code&gt;projectname/demo&lt;/code&gt; I now keep a bunch of &lt;a href=&quot;https://github.com/cboettig/pdg_control/tree/master/inst/examples&quot;&gt;markdown scripts&lt;/a&gt; in &lt;code&gt;inst/examples&lt;/code&gt;, ((since I’m using the R package for projects and demo/ doesn’t want non-R scripts)).&lt;/p&gt;
&lt;p&gt;The great thing about this is that I can just click on each script and see nicely rendered text, links, code, and figures right on github.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://farm7.staticflickr.com/6217/7003679683_d9f472efd6_o.png&quot; alt=&quot;example entry&quot; /&gt;](https://github.com/cboettig/pdg_control/blob/master/inst/examples/Reed.md)&lt;/p&gt;
&lt;p&gt;While I can push this same markdown script to wordpress and have it be rendered in my notebook, I think maintaining these examples on github is preferable. Note that every script-name appears twice, once with and once without the &lt;code&gt;_knit_&lt;/code&gt; extension. The &lt;code&gt;_knit_&lt;/code&gt; extension indicates the file I ran to create the output (the code is in html comments so you can only see them in raw form). Because all the code is displayed in the output file (unless I call knitr options to surpress this), there’s really no need to view the &lt;code&gt;_knit_&lt;/code&gt; file to reproduce the example, everything is in one place in the output &lt;code&gt;.md&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;These files benefit from the github managed version history, just clicking the history button gives a list of all the former versions, with code and results right there.&lt;/p&gt;
&lt;p&gt;While I could update a post in the notebook in the same way, the version control of this wordpress notebook is more crude, and more importantly, the blog-format is designed for a linear flow, whereas in a given day I might update each of these example scripts. This seems like a much more natural workflow then having consecutive entries in the notebook with updated versions of the analysis the day before, and more natural than going back and changing a previous notebook entry.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://farm8.staticflickr.com/7094/7003692801_d14a23855e_o.png&quot; /&gt;](https://github.com/cboettig/pdg_control/commits/master/inst/examples/model_uncertainty.md)&lt;/p&gt;
&lt;p&gt;Github can also gives nice snapshot of what’s changed, along with the commit notes for each project, for each day. Now that I can display figures and formatted text on github, as well as code, what role does the Wordpress notebook play? I think this wordpress notebook can resume is proper role as a lab notebook, containing reflections and synthesis on what I’ve done, rather than the more comprehensive copies of each analysis and each figure. Because it’s the internet, I can link to each of the analyses of that day using version-stable links from github, or links that always give the most recent version. This requires additional effort, but it’s a reflection I should be doing anyway. We’ll see how it goes. Meanwhile, welcome to the open lab notebook v2.0.&lt;/p&gt;
&lt;h2 id=&quot;a-few-more-details&quot;&gt;A few more details&lt;/h2&gt;
&lt;h5 id=&quot;longer-code-r-functions&quot;&gt;Longer code &amp;amp; R functions&lt;/h5&gt;
&lt;p&gt;When I write code longer than a few lines, I try to make it a function, or collection of functions, and include basic Roxygen-style documentation with it so I don’t have to read the code to remember how to use it. These functions naturally live in the &lt;code&gt;R/&lt;/code&gt; directory of the project. The project’s R package can be installed, and all these functions are then available. Each of my example scripts calls functions belonging to the package, but those functions change less regularly. To fully reproduce the example, it would be necessary to grab a copy of the R package from the same commit-version as the script. In practice, most of the time any version of the package R functions could be used.&lt;/p&gt;
&lt;h5 id=&quot;github-wiki&quot;&gt;Github wiki&lt;/h5&gt;
&lt;p&gt;Github has wiki pages which I could use instead of putting my entries in &lt;code&gt;inst/example&lt;/code&gt;, since both render markdown (the wiki will additionally render mathjax math, all be it as a png). However, the wiki is aimed at online editing, and exists as a separate repository, so just keeping the markdown files in the project directory is simpler.&lt;/p&gt;
&lt;h5 id=&quot;images&quot;&gt;Images&lt;/h5&gt;
&lt;p&gt;Github doesn’t actually host the images. In fact, my images are still being pushed to flickr, and you can see them there. Knitr is handling this automatically as the figures are created, keeping track of the links so they can be included in the output markdown. Knitr can do this with imgur out of the box, and I’ve also written a wrapper to let it push the images to a wordpress site. Doesn’t really matter where they are stored, they can always be viewed on Github.&lt;/p&gt;
&lt;h5 id=&quot;heavy-computing&quot;&gt;Heavy computing&lt;/h5&gt;
&lt;p&gt;I’ve found that the knitted markdown examples make the most sense for fast-running examples. Despite excellent caching support, I’ve found it best to run really long-running examples as external R scripts, and then save and import this data. Such scripts are often being run on a cluster that can’t push images to the internet anyway.&lt;/p&gt;
&lt;h5 id=&quot;power-of-openness&quot;&gt;Power of openness?&lt;/h5&gt;
&lt;p&gt;It occurs to me that this system would be harder but not impossible, in a closed environment. I could upload the figures to flickr with private status. The links are hashes, so cannot be guessed. If the output were then hosted on a secure site (running a markdown renderer, such as Jekyll), instead of github, these links would still work to display the images. Then one could give selected access to those pages. But the open solution works out of the box.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Citing R packages</title>
	 <link href="/2012/03/20/citing-r-packages.html"/>
   <updated>2012-03-20T10:02:09+00:00</updated>
   <id>/03/20/citing-r-packages</id>
   <content type="html">&lt;p&gt;I’m not always careful in citing all the R packages I use. R actually has some rather nice built-in mechanisms to support this, so I really have no excuse. Here’s some quick examples:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;citation&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ouch&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;To cite the ouch package in publications
use:

  Aaron A. King and Marguerite A. Butler
  (2009), ouch: Ornstein-Uhlenbeck models
  for phylogenetic comparative hypotheses (R
  package),
  http://ouch.r-forge.r-project.org

  Butler, M. A. and King, A. A. (2004)
  Phylogenetic comparative analysis: a
  modeling approach for adaptive evolution
  Am. Nat. 164:683--695

As ouch is continually evolving, you may
want to cite its version number. Find it
with &amp;#39;help(package=ouch)&amp;#39;.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Can I have that in bibtex format please?&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;toBibtex&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;citation&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;ouch&amp;quot;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;@Manual{,
  title = {ouch: Ornstein-Uhlenbeck models for phylogenetic comparative hypotheses},
  author = {Aaron A. King and Marguerite A. Butler},
  year = {2009},
  url = {http://ouch.r-forge.r-project.org},
}
@Article{,
  author = {Marguerite A. Butler and Aaron A. King},
  title = {Phylogenetic comparative analysis: a modeling approach for adaptive evolution},
  journal = {American Naturalist},
  year = {2004},
  volume = {164},
  pages = {683--695},
  url = {http://www.journals.uchicago.edu/AN/journal/issues/v164n6/40201/40201.html},
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that this package provides the citation information for both the package and the associated journal article simultaneously, and R has successfully identified the formats as ‘Manual’ and ‘Article’ respectively.&lt;/p&gt;
&lt;p&gt;After running your code, consider creating a custom bibtex file containing the citation information for all the packages you have just used. (The file can be imported into most citation managers, if LaTeX isn’t your thing).&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;sink&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;test.bib&amp;quot;&lt;/span&gt;)
out &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;names&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sessionInfo&lt;/span&gt;()$otherPkgs), 
    function(x) &lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;citation&lt;/span&gt;(x), &lt;span class=&quot;dt&quot;&gt;style =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Bibtex&amp;quot;&lt;/span&gt;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also simply generate the list of loaded package in LaTeX format, which could be automatically included.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;toLatex&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;sessionInfo&lt;/span&gt;(), &lt;span class=&quot;dt&quot;&gt;locale =&lt;/span&gt; &lt;span class=&quot;ot&quot;&gt;FALSE&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;for-package-authors&quot;&gt;For package authors&lt;/h3&gt;
&lt;p&gt;R will attempt to automatically construct the citation information for the package automatically from the description file, so it is not strictly necessary to do anything to your package to create it. Note that R has recently adopted a new syntax to specify the authors, which is a bit more precise. Instead of using Authors: in the DESCRPTION, we use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Authors@R: c(person(&amp;quot;Carl&amp;quot;, &amp;quot;Boettiger&amp;quot;, role = c(&amp;quot;aut&amp;quot;, &amp;quot;cre&amp;quot;), email = &amp;quot;cboettig@gmail.com&amp;quot;), 
  person(&amp;quot;Duncan&amp;quot;, &amp;quot;Temple Lang&amp;quot;, role = &amp;quot;aut&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This defines the roles (author, creator, etc, see &lt;code&gt;?person&lt;/code&gt; for details), and ‘creator’ takes the place of the &lt;code&gt;Maintainer:&lt;/code&gt; designation, and requires an email address. If you wish to add an additional publication as part of the citation information (such as the example from &lt;code&gt;ouch&lt;/code&gt; above, you can specify this in the CITATION file. For the example this looks like:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;citHeader&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;To cite the ouch package in publications use:&amp;quot;&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;citEntry&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;entry =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Article&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;author =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;personList&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;as.person&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Marguerite A. Butler&amp;quot;&lt;/span&gt;), 
        &lt;span class=&quot;kw&quot;&gt;as.person&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Aaron A. King&amp;quot;&lt;/span&gt;)), &lt;span class=&quot;dt&quot;&gt;title =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;Phylogenetic comparative analysis: a modeling approach for adaptive evolution&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;journal =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;American Naturalist&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;year =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2004&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;volume =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;164&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;pages =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;683--695&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;st&quot;&gt;&amp;quot;http://www.journals.uchicago.edu/AN/journal/issues/v164n6/40201/40201.html&amp;quot;&lt;/span&gt;, 
    &lt;span class=&quot;dt&quot;&gt;textVersion =&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;paste&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;Butler, M. A. and King, A. A. (2004)&amp;quot;&lt;/span&gt;, 
        &lt;span class=&quot;st&quot;&gt;&amp;quot;Phylogenetic comparative analysis: a modeling approach for adaptive evolution&amp;quot;&lt;/span&gt;, 
        &lt;span class=&quot;st&quot;&gt;&amp;quot;Am. Nat. 164:683--695&amp;quot;&lt;/span&gt;))
&lt;span class=&quot;kw&quot;&gt;citFooter&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;As ouch is continually evolving, you may want to cite its version number. Find it with &amp;#39;help(package=ouch)&amp;#39;.&amp;quot;&lt;/span&gt;)

[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;st&quot;&gt;&amp;quot;As ouch is continually evolving, you may want to cite its version number. Find it with &amp;#39;help(package=ouch)&amp;#39;.&amp;quot;&lt;/span&gt;
&lt;span class=&quot;kw&quot;&gt;attr&lt;/span&gt;(,&lt;span class=&quot;st&quot;&gt;&amp;quot;class&amp;quot;&lt;/span&gt;)
[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;] &lt;span class=&quot;st&quot;&gt;&amp;quot;citationFooter&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(It seems like there should be a simple way to generate this automatically from the bibtex format, but I haven’t discovered it.)&lt;/p&gt;
&lt;h3 id=&quot;r-as-a-citation-tool&quot;&gt;R as a citation tool&lt;/h3&gt;
&lt;p&gt;I wrote an R function for the Crossref API in our rplos package. We should probably be formatting the output as an R bibentry, taking advantage of R’s understanding of citation structure. Then I could work automatic citation look-up into my posts using inline knitr calls, such as:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;
&lt;span class=&quot;kw&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;crossref&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;10.1038/44766&amp;quot;&lt;/span&gt;), &lt;span class=&quot;dt&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;st&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An alternate mechanism could read in a local bibtex file and drop in the correct entry in the desired format.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Elegant & fast data manipulation with data.table</title>
	 <link href="/2012/02/12/elegant-fast-data-manipulation-with-data-table.html"/>
   <updated>2012-02-12T13:39:03+00:00</updated>
   <id>/02/12/elegant-fast-data-manipulation-with-data-table</id>
   <content type="html">&lt;p&gt;Just learned about the R &lt;a href=&quot;http://cran.r-project.org/web/packages/data.table/index.html&quot;&gt;data.table package&lt;/a&gt; (ht &lt;span class=&quot;citation&quot; data-cites=&quot;recology_&quot;&gt;@recology_&lt;/span&gt;) makes R data frames into ultra-fast, SQL-like objects.&lt;/p&gt;
&lt;p&gt;One thing we get is some very nice and powerful syntax. Consider some simple data of replicate time series:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;time &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;)
replicate &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;sort&lt;/span&gt;(time)
value &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rnorm&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)
df &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(replicate, time, value)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To apply a function to each set of replicates, instead of&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;sapply&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;kw&quot;&gt;max&lt;/span&gt;(df$replicate), function(i) 
  &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;( df[df$replicate ==&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;i,]$value) 
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can use&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;require&lt;/span&gt;(data.table)
dt &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.table&lt;/span&gt;(df)
dt[, &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt;(value), by=&lt;span class=&quot;st&quot;&gt;&amp;quot;replicate&amp;quot;&lt;/span&gt;]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that we could have passed multiple arguments to the function, &lt;code&gt;f(time, value)&lt;/code&gt;, or functions of the arguments, &lt;code&gt;mean(value*time)&lt;/code&gt;, etc. While this can be much faster data-frames to begin with (see below), when the function is much more computationally intensive than “mean”, it might be sensible to parallelize this command instead:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;require&lt;/span&gt;(snowfall)
&lt;span class=&quot;kw&quot;&gt;sfInit&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;par=&lt;/span&gt;T, &lt;span class=&quot;dt&quot;&gt;cpu=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;)
&lt;span class=&quot;kw&quot;&gt;sfSapply&lt;/span&gt;(&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;dv&quot;&gt;10&lt;/span&gt;, function(i)
  &lt;span class=&quot;kw&quot;&gt;mean&lt;/span&gt; (dt[replicate==i, value] )
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that we could have given the second argument as a list if we needed multiple columns, i.e. &lt;code&gt;list(time, value)&lt;/code&gt;. For a provocative example, consider this example comparing the two. Let’s create a very big data frame, and also make it a data table:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;grpsize =&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;ceiling&lt;/span&gt;(&lt;span class=&quot;fl&quot;&gt;1e7&lt;/span&gt;/&lt;span class=&quot;dv&quot;&gt;26&lt;/span&gt;^&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;) 
DF &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.frame&lt;/span&gt;(&lt;span class=&quot;dt&quot;&gt;x=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;factor&lt;/span&gt;(LETTERS), &lt;span class=&quot;dt&quot;&gt;each =&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;26&lt;/span&gt; *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;grpsize), 
                 &lt;span class=&quot;dt&quot;&gt;y=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;rep&lt;/span&gt;(&lt;span class=&quot;kw&quot;&gt;factor&lt;/span&gt;(letters), &lt;span class=&quot;dt&quot;&gt;each =&lt;/span&gt; grpsize), 
                 &lt;span class=&quot;dt&quot;&gt;v=&lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;runif&lt;/span&gt;(grpsize *&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;26&lt;/span&gt; ^&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;))
DT &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;data.table&lt;/span&gt;(DF)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This table has three columns, each capital letter of the alphabet (fist column) paired with each lower-case letter in column B. Let’s imagine we want all the cases that have a capital “R” and lowercase “f”. Well, in classic R we might do:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;( 
  DF[DF$x==&lt;span class=&quot;st&quot;&gt;&amp;quot;R&amp;quot;&lt;/span&gt; &amp;amp;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;DF$y==&lt;span class=&quot;st&quot;&gt;&amp;quot;f&amp;quot;&lt;/span&gt;, ]
)
user  system elapsed 
  &lt;span class=&quot;fl&quot;&gt;2.796&lt;/span&gt;   &lt;span class=&quot;fl&quot;&gt;0.500&lt;/span&gt;   &lt;span class=&quot;fl&quot;&gt;3.313&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We could do the same command with DF, and it would do the same “Vector Search”, which is slow (order N). we can get order log(N) scaling though with join option of data.table. We first have to set x and y as “keys”.&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;setkey&lt;/span&gt;(DT, x, y)
&lt;span class=&quot;kw&quot;&gt;system.time&lt;/span&gt;(
  DT[&lt;span class=&quot;kw&quot;&gt;J&lt;/span&gt;(&lt;span class=&quot;st&quot;&gt;&amp;quot;R&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;h&amp;quot;&lt;/span&gt;)]
)
   user  system elapsed 
  &lt;span class=&quot;fl&quot;&gt;0.012&lt;/span&gt;   &lt;span class=&quot;fl&quot;&gt;0.000&lt;/span&gt;   &lt;span class=&quot;fl&quot;&gt;0.014&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A speed-up of 233 times! Certainly better than splitting up the analysis over 100s of processors. &lt;strong&gt;Brilliant&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&quot;relationship-of-commands-to-sql&quot;&gt;Relationship of commands to SQL&lt;/h2&gt;
&lt;p&gt;The FAQ vignette provides a nice line-by-line comparison of SQL commands to data.table commands:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&quot;header&quot;&gt;
&lt;th style=&quot;text-align: left;&quot;&gt;data.table&lt;/th&gt;
&lt;th style=&quot;text-align: left;&quot;&gt;SQL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;code&gt;i&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;where&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;code&gt;j&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;select&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;code&gt;:=&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;update&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;code&gt;by&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;group by&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;code&gt;i&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;order by (in compound syntax)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;code&gt;i&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;having (in compound syntax)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;code&gt;nomatch=NA&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;outer join&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;code&gt;nomatch=0&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;inner join&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;odd&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;code&gt;mult=&amp;quot;first&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;N/A because SQL is inherently unordered&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;even&quot;&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;&lt;code&gt;roll=TRUE&lt;/code&gt;&lt;/td&gt;
&lt;td style=&quot;text-align: left;&quot;&gt;N/A because SQL is inherently unordered&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The general form is : &lt;code&gt;DT[where,select|update,group by][having][order by][ ]...[ ]&lt;/code&gt;. A key advantage of column vectors in R is that they are ordered, unlike SQL.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Is your phylogeny informative?</title>
	 <link href="/2012/01/19/is-your-phylogeny-informative.html"/>
   <updated>2012-01-19T14:10:49+00:00</updated>
   <id>/01/19/is-your-phylogeny-informative</id>
   <content type="html">&lt;p&gt;Yesterday my paper (Boettiger &lt;em&gt;et. al.&lt;/em&gt; 2012)  appeared in early view in Evolution (&lt;a href=&quot;http://www.mendeley.com/download/public/98752/4485545655/9a209c7dd29980fd2e47c06eb8b2d1d7dd6f70d4/dl.pdf&quot;&gt;author’s preprint&lt;/a&gt;),As the open access copy doesn’t appear on pubmed for a while, you can access my author’s copy &lt;a href=&quot;http://www.mendeley.com/download/public/98752/4485545655/9a209c7dd29980fd2e47c06eb8b2d1d7dd6f70d4/dl.pdf&quot;&gt;here&lt;/a&gt;. so I’d like to take this chance to share the back-story and highlight my own view on some of our findings, and the associated &lt;a href=&quot;http://cran.r-project.org/web/packages/pmc/index.html&quot;&gt;package on CRAN&lt;/a&gt;.Just submitted, meanwhile, the code is always on &lt;a href=&quot;https://github.com/cboettig/pmc&quot;&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I didn’t set out to write this paper.  I set out to write a very different paper, introducing a new phylogenetic method for continuous traits that estimates changes in evolutionary constraint.  This adds _even more _parameters than already present in rich models multi-peak OU process, and I wanted to know if it could be justified – if there really was enough information to play the game we already had, before I went and made the situation even worse. Trying to find something rigorous enough to hang my hat on, I ended up writing this paper.&lt;/p&gt;
&lt;h3 id=&quot;the-short-of-it&quot;&gt;The short of it&lt;/h3&gt;
&lt;p&gt;There’s essentially three conclusions I draw from the paper.&lt;/p&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;&lt;p&gt;AIC is not a reliable way to select models.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Certain parameters, such as &lt;span class=&quot;math&quot;&gt;\(\lambda\)&lt;/span&gt;, a measure of “phylogenetic signal,” (Pagel, 1999) are going to be really hard to estimate.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;BUT as long as we &lt;em&gt;simulate extensively&lt;/em&gt; to test model choice and parameter uncertainty, we won’t be misled by either of these.  So it’s okay to drink the koolaid (Losos, 2011), but &lt;strong&gt;drink responsibly. &lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;a-few-reflections&quot;&gt;A few reflections&lt;/h3&gt;
&lt;p&gt;I really have two problems with AIC and other information criteria when it comes to phylogenetic methods.  One is that it’s too easy to simulate data from one model, and have the information criteria choose a ridiculously over-parameterized model instead.  In one example, the wrong model has a &lt;span class=&quot;math&quot;&gt;\(\Delta\)&lt;/span&gt;AIC of 10 points over the correct model.&lt;/p&gt;
&lt;p&gt;But a more basic problem is that it’s just not designed for hypothesis testing – it doesn’t care how much data you have, it doesn’t give a notion of significance.  If we’re ascribing biological meaning to different models as different hypotheses, we need want a measure of uncertainty.&lt;/p&gt;
&lt;p&gt;When estimating parameters that scale branch length, I think we must be cautious because these are really data-hungry, and don’t work well on small trees. Check out how few of these estimates of lambda on 100 replicate datasets hit near the correct value shown by vertical line:&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;http://farm8.staticflickr.com/7014/6727029515_bcfe58aedb_o.png&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;The package commands are explained in more detail in the &lt;strong&gt;&lt;a href=&quot;http://cran.r-project.org/web/packages/pmc/vignettes/pmc_tutorial.pdf&quot;&gt;package vignette&lt;/a&gt;&lt;/strong&gt;, but the idea is simple. Running the pmc comparison between two models (for the model-choice step) looks like this:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;bm_v_lambda &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;pmc&lt;/span&gt;(geospiza.tree, geospiza.data[&lt;span class=&quot;st&quot;&gt;&amp;quot;wingL&amp;quot;&lt;/span&gt;],
  &lt;span class=&quot;st&quot;&gt;&amp;quot;BM&amp;quot;&lt;/span&gt;, &lt;span class=&quot;st&quot;&gt;&amp;quot;lambda&amp;quot;&lt;/span&gt;, &lt;span class=&quot;dt&quot;&gt;nboot=&lt;/span&gt;&lt;span class=&quot;dv&quot;&gt;100&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Extracting the distribution of estimates for the parameter lambda got from fitting the lambda model (B) to data made by simulating under lambda model (A):&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;lambdas &amp;lt;-&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kw&quot;&gt;subset&lt;/span&gt;(bm_v_lambda[&lt;span class=&quot;st&quot;&gt;&amp;quot;par_dists&amp;quot;&lt;/span&gt;],
  comparison==&lt;span class=&quot;st&quot;&gt;&amp;quot;BB&amp;quot;&lt;/span&gt; &amp;amp;&lt;span class=&quot;st&quot;&gt; &lt;/span&gt;parameter==&lt;span class=&quot;st&quot;&gt;&amp;quot;lambda&amp;quot;&lt;/span&gt;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To view the model comparison, just plot the pmc result:&lt;/p&gt;
&lt;pre class=&quot;sourceCode r&quot;&gt;&lt;code class=&quot;sourceCode r&quot;&gt;&lt;span class=&quot;kw&quot;&gt;plot&lt;/span&gt;(bm_v_lambda)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The substantial overlap in the likelihood ratios after simulating under either model indicate that we cannot choose between BM and lambda in this case.  I’ll leave the paper to explain this approach in more detail, but it’s just simulation and refitting.&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;http://farm8.staticflickr.com/7026/6727293465_4a2a545fdf_o.png&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;You could just bootstrap the likelihoods or for nested models, look at the parameter distributions, but you get the maximum &lt;em&gt;statistical power&lt;/em&gt; from the ratio (says Neyman-Pearson Lemma).&lt;/p&gt;
&lt;h3 id=&quot;a-technical-note-mix-and-match-formats&quot;&gt;A technical note: mix and match formats&lt;/h3&gt;
&lt;p&gt;Many users don’t like going between ouch format and ape/phylo formats. The pmc package doesn’t care what you use, feel free to mix and match. In case the conversion tools are useful, I’ve provided functions to move your data and trees back and forth between those formats too.  See &lt;em&gt;format_data()&lt;/em&gt; to data-frames and &lt;em&gt;convert()&lt;/em&gt; to toggle between tree formats.&lt;/p&gt;
&lt;h2 id=&quot;reproducible-research&quot;&gt;Reproducible Research&lt;/h2&gt;
&lt;p&gt;The package is designed to make things easier.  It comes with a vignette (written in sweave) showing just what commands to run to replicate the results from the manuscript.&lt;/p&gt;
&lt;p&gt;This entire project has been documented in my open lab notebook from its &lt;a href=&quot;http://openwetware.org/wiki/User:Carl_Boettiger/Notebook/Comparative_Phylogenetics/2010/02/07&quot;&gt;inception&lt;/a&gt;. Posts prior to October 2010 can be found on my &lt;a href=&quot;http://openwetware.org/wiki/User:Carl_Boettiger/Notebook/Comparative_Phylogenetics/2010&quot;&gt;OWW notebook&lt;/a&gt;, the rest in my current &lt;a href=&quot;http://www.carlboettiger.info/archives/category/phylogenetics&quot;&gt;phylogenetics notebook&lt;/a&gt; (here on wordpress). Of course this project is interwoven with many notes on related and more recent work.&lt;/p&gt;
&lt;h2 id=&quot;additional-methods-and-feedback&quot;&gt;Additional methods and feedback&lt;/h2&gt;
&lt;p&gt;As we discuss in the paper, simulation and randomization-based methods have an established history in this field(Freckleton &amp;amp; Harvey, 2006), (Harmon &lt;em&gt;et. al.&lt;/em&gt; 2010). These are promising things to do, and we should do them more often, but I might make a few comments on these approaches.&lt;/p&gt;
&lt;p&gt;We are not getting a real power test when we simulate data produced from different models whose parameters have been arbitrarily assigned, rather than estimated on the same data, lest we overestimate the power. Of course we need to have a likelihood function to be able to estimate those parameters, which is not always available.&lt;/p&gt;
&lt;p&gt;It is also common and very useful to assign some summary statistic whose value is expected to be very different under different models of evolution, and look at it’s distribution under simulation. This is certainly valid and has ties to cutting edge approaches in ABC methods, but will be less statistically powerful than if we can calculate the likelihoods of the models directly and compare those, as we do here.&lt;/p&gt;
&lt;p&gt;Boettiger, C., Coop, G., &amp;amp; Ralph, P. (2012). IS YOUR PHYLOGENY INFORMATIVE? MEASURING THE POWER OF COMPARATIVE METHODS Evolution DOI: &lt;a href=&quot;http://dx.doi.org/10.1111/j.1558-5646.2012.01574.x&quot;&gt;10.1111/j.1558-5646.2012.01574.x&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Boettiger C, Coop G and Ralph P (2012). “is Your Phylogeny Informative? Measuring The Power of Comparative Methods.” &lt;em&gt;Evolution&lt;/em&gt;. &lt;a href=&quot;http://dx.doi.org/10.1111/j.1558-5646.2012.01574.x&quot;&gt;http://dx.doi.org/10.1111/j.1558-5646.2012.01574.x&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Pagel M (1999). “Unknown.” &lt;em&gt;Nature&lt;/em&gt;, &lt;b&gt;401&lt;/b&gt;. ISSN 00280836, &lt;a href=&quot;http://dx.doi.org/10.1038/44766&quot;&gt;http://dx.doi.org/10.1038/44766&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Losos J (2011). “Seeing The Forest For The Trees: The Limitations of Phylogenies in Comparative Biology.” &lt;em&gt;The American Naturalist&lt;/em&gt;, &lt;b&gt;177&lt;/b&gt;. ISSN 00030147, &lt;a href=&quot;http://dx.doi.org/10.1086/660020&quot;&gt;http://dx.doi.org/10.1086/660020&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Freckleton R and Harvey P (2006). “Detecting Non-Brownian Trait Evolution in Adaptive Radiations.” &lt;em&gt;Plos Biology&lt;/em&gt;, &lt;b&gt;4&lt;/b&gt;. ISSN 1544-9173, &lt;a href=&quot;http://dx.doi.org/10.1371/journal.pbio.0040373&quot;&gt;http://dx.doi.org/10.1371/journal.pbio.0040373&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Harmon L, Losos J, Jonathan Davies T, Gillespie R, Gittleman J, Bryan Jennings W, Kozak K, McPeek M, Moreno-Roark F, Near T, Purvis A, Ricklefs R, Schluter D, Schulte II J, Seehausen O, Sidlauskas B, Torres-Carvajal O, Weir J and Mooers A (2010). “Early Bursts of Body Size And Shape Evolution Are Rare in Comparative Data.” &lt;em&gt;Evolution&lt;/em&gt;. &lt;a href=&quot;http://dx.doi.org/10.1111/j.1558-5646.2010.01025.x&quot;&gt;http://dx.doi.org/10.1111/j.1558-5646.2010.01025.x&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 
</feed>
